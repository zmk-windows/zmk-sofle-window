#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <800>;
    acceleration-exponent = <1>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC           &kp N1  &kp N2        &kp N3        &kp N4  &kp N5       &kp UP_ARROW       &kp N6     &kp N7    &kp N8     &kp N9             &kp N0    &kp BACKSPACE
&kp TAB           &kp Q   &kp W         &kp E         &kp R   &kp T        &kp DOWN_ARROW     &kp Y      &kp U     &kp I      &kp O              &kp P     &kp BSLH
&kp LEFT_CONTROL  &kp A   &kp S         &kp D         &kp F   &kp G        &kp LEFT_ARROW     &kp H      &kp J     &kp K      &kp L              &kp SEMI  &kp APOS
&kp LSHFT         &kp Z   &kp X         &kp C         &kp V   &kp B        &kp RIGHT_ARROW    &kp N      &kp M     &kp COMMA  &kp DOT            &kp FSLH  &kp ENTER
&kp LC(N0)        &mo 1   &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &kp SPACE    &kp RIGHT_CONTROL  &kp SPACE  &kp RALT  &kp RALT   &kp RIGHT_CONTROL  &mo 2
            >;

            sensor-bindings = <&inc_dec_kp LC(EQUAL) LC(MINUS)>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1             &kp F2            &kp F3           &kp F4         &kp F5      &kp UP_ARROW     &kp F6     &kp F7         &kp F8          &kp F9          &kp F10           &kp DELETE
&kp CAPS    &kp C_VOLUME_DOWN  &kp UP_ARROW      &kp C_VOLUME_UP  &kp PAGE_UP    &kp HOME    &kp DOWN_ARROW   &kp HOME   &kp PAGE_UP    &mkp LCLK       &mmv MOVE_UP    &kp F11           &kp F12
&trans      &kp LEFT_ARROW     &kp DOWN_ARROW    &kp RIGHT_ARROW  &kp PAGE_DOWN  &kp END     &kp LEFT_ARROW   &kp END    &kp PAGE_DOWN  &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT   &trans
&trans      &kp C_PREVIOUS     &kp C_PLAY_PAUSE  &kp C_NEXT       &trans         &trans      &kp RIGHT_ARROW  &kp F11    &kp F12        &kp INSERT      &mmv MOVE_DOWN  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp LC(N0)  &trans             &trans            &trans           &trans         &trans      &kp C_SNAPSHOT   &kp MINUS  &kp EQUAL      &mkp LCLK       &mkp RCLK       &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&inc_dec_kp LC(EQUAL) LC(MINUS)>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &rgb_ug RGB_BRI  &kp F6           &kp F7           &kp F8      &kp F9     &kp F10      &bt BT_CLR_ALL
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &rgb_ug RGB_BRD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &rgb_ug RGB_EFR  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &rgb_ug RGB_EFF  &trans           &trans           &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &rgb_ug RGB_TOG  &trans           &trans           &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
